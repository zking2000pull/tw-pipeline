steps {
  script {
    def output = sh(returnStdout: true, script: 'md5sum package.json | awk \'{print $1}\'').trim()
        if () {
          stage('stage name1') {}
        } else {
          stage('stage name2') {}
        }
  }
}

****************************

withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: "CredentialId", passwordVariable: 'USERPASS', usernameVariable: 'USERNAME']]) {
  withEnv(["PATH+NODEJS=${tool '6.9.5_NodeJS_Linux'}/bin"]) {
        sh """
            echo $USERPASS $USERNAME
            """
  }
}

****************************

****************************

withCredentials([[$class: 'UsernamePasswordBinding', credentialsId: "CredentialId", variable: "Iqscan"]]) {
  withEnv(["PATH+NODEJS=${tool '6.9.5_NodeJS_Linux'}/bin"]) {
        sh """
            echo $Iqscan
            """
  }
}

****************************

stage('Approve to deploy?') {
  steps {
       timeout(time: 5, unit: 'MINUTES') {
          script {
              myStage = input message: 'How long you want to wait', submitter: 'submitter', parameters: [choice(choices: '1Min\n2Mins\n3Mins', description: '', name: 'Minutes')]
          }
      }
  }
}

****************************

stage('1Min') {
  when {
      expression {myStage == "1Min"}
  }
  steps {
      timeout(time: 1, unit: 'MINUTES') {
          input message: 'This stage will delay for 1 minute', submitter: 'submitter'
      }
  }
}


****************************

options {
    buildDiscarder(logRotator(numToKeepStr: '5'))
    disableConcurrentBuilds()
    timestamps()
    skipDefaultCheckout()
}

****************************

stage('Tools Preparation') {
    steps {
        checkout scm
    }
}

****************************

The simple answer is, Agent is for declarative pipelines and node is for scripted pipelines.

In declarative pipelines the agent directive is used for specifying which agent/slave the job/task is to be executed on. This directive only allows you to specify where the task is to be executed, which agent, slave, label or docker image.

On the other hand, in scripted pipelines the node step can be used for executing a script/step on a specific agent, label, slave. The node step optionally takes the agent or label name and then a closure with code that is to be executed on that node.

declarative and scripted pipelines (edit based on the comment):

declarative pipelines is a new extension of the pipeline DSL (it is basically a pipeline script with only one step, a pipeline step with arguments (called directives), these directives should follow a specific syntax. The point of this new format is that it is more strict and therefore should be easier for those new to pipelines, allow for graphical editing and much more.
scripted pipelines is the fallback for advanced requirements.

****************************

+ printenv
JENKINS_NODE_COOKIE=b54d879c-26ce-4076-b3af-43464ce6d4c0
BUILD_URL=http://localhost:8080/job/ThoughtWorks_Pipeline/216/
TERM_PROGRAM=Apple_Terminal
SHELL=/bin/bash
TERM=ansi
HUDSON_SERVER_COOKIE=0de75bfbaba4fa3b
STAGE_NAME=2018 in the result
TMPDIR=/var/folders/jp/s0fbpt254qs93ypz21xhvrsc0000gn/T/
BUILD_TAG=jenkins-ThoughtWorks_Pipeline-216
Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.4lR5XpSXE5/Render
TERM_PROGRAM_VERSION=404
TERM_SESSION_ID=CDE31E42-C7FF-457D-A1DB-CD2C2A96F672
SDKMAN_PLATFORM=Darwin
JOB_URL=http://localhost:8080/job/ThoughtWorks_Pipeline/
SDKMAN_CURRENT_API=https://api.sdkman.io/2
WORKSPACE=/tmp/TW-pipeline
RUN_CHANGES_DISPLAY_URL=http://localhost:8080/job/ThoughtWorks_Pipeline/216/display/redirect?page=changes
JAVA_MAIN_CLASS_1125=Main
USER=StephenChou
SDKMAN_LEGACY_API=https://api.sdkman.io/1
SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.F1uajtB8U5/Listeners
__CF_USER_TEXT_ENCODING=0x1F5:0x19:0x34
JENKINS_HOME=/Users/StephenChou/.jenkins
PATH=/Users/StephenChou/.sdkman/candidates/maven/current/bin:/Users/StephenChou/.sdkman/candidates/java/current/bin:/Users/StephenChou/.sdkman/candidates/groovy/current/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Applications/Wireshark.app/Contents/MacOS:/Users/StephenChou/.sdkman/candidates/maven/3.5.2/bin
MAVEN_HOME=/Users/StephenChou/.sdkman/candidates/maven/current
RUN_DISPLAY_URL=http://localhost:8080/job/ThoughtWorks_Pipeline/216/display/redirect
_=/usr/bin/printenv
PWD=/private/tmp/TW-pipeline
JAVA_HOME=/Users/StephenChou/.sdkman/candidates/java/current
HUDSON_URL=http://localhost:8080/
LANG=zh_CN.UTF-8
SDKMAN_VERSION=5.5.13+272
JOB_NAME=ThoughtWorks_Pipeline
XPC_FLAGS=0x0
BUILD_DISPLAY_NAME=#216
JENKINS_URL=http://localhost:8080/
BUILD_ID=216
XPC_SERVICE_NAME=0
JOB_BASE_NAME=ThoughtWorks_Pipeline
SHLVL=3
HOME=/Users/StephenChou
EXECUTOR_NUMBER=1
JENKINS_SERVER_COOKIE=durable-a48298eb4326529f5341ea286a9f574c
NODE_LABELS=master
LOGNAME=StephenChou
SDKMAN_DIR=/Users/StephenChou/.sdkman
GROOVY_HOME=/Users/StephenChou/.sdkman/candidates/groovy/current
HUDSON_HOME=/Users/StephenChou/.jenkins
NODE_NAME=master
JOB_DISPLAY_URL=http://localhost:8080/job/ThoughtWorks_Pipeline/display/redirect
BUILD_NUMBER=216
SDKMAN_CANDIDATES_DIR=/Users/StephenChou/.sdkman/candidates
HUDSON_COOKIE=27250150-e700-45cd-967d-16446e11ea70
DISPLAY=/private/tmp/com.apple.launchd.o9ult69IGP/org.macosforge.xquartz:0

echo sh(script: 'env|sort', returnStdout: true)
Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.4lR5XpSXE5/Render
BUILD_DISPLAY_NAME=#217
BUILD_ID=217
BUILD_NUMBER=217
BUILD_TAG=jenkins-ThoughtWorks_Pipeline-217
BUILD_URL=http://localhost:8080/job/ThoughtWorks_Pipeline/217/
DISPLAY=/private/tmp/com.apple.launchd.o9ult69IGP/org.macosforge.xquartz:0
EXECUTOR_NUMBER=1
GROOVY_HOME=/Users/StephenChou/.sdkman/candidates/groovy/current
HOME=/Users/StephenChou
HUDSON_COOKIE=fb148007-976f-46d5-8425-f2610fe435f7
HUDSON_HOME=/Users/StephenChou/.jenkins
HUDSON_SERVER_COOKIE=0de75bfbaba4fa3b
HUDSON_URL=http://localhost:8080/
JAVA_HOME=/Users/StephenChou/.sdkman/candidates/java/current
JAVA_MAIN_CLASS_1125=Main
JENKINS_HOME=/Users/StephenChou/.jenkins
JENKINS_NODE_COOKIE=b42d0e98-67b8-4c0c-82f5-da0b21b5f126
JENKINS_SERVER_COOKIE=durable-a48298eb4326529f5341ea286a9f574c
JENKINS_URL=http://localhost:8080/
JOB_BASE_NAME=ThoughtWorks_Pipeline
JOB_DISPLAY_URL=http://localhost:8080/job/ThoughtWorks_Pipeline/display/redirect
JOB_NAME=ThoughtWorks_Pipeline
JOB_URL=http://localhost:8080/job/ThoughtWorks_Pipeline/
LANG=zh_CN.UTF-8
LOGNAME=StephenChou
MAVEN_HOME=/Users/StephenChou/.sdkman/candidates/maven/current
NODE_LABELS=master
NODE_NAME=master
PATH=/Users/StephenChou/.sdkman/candidates/maven/current/bin:/Users/StephenChou/.sdkman/candidates/java/current/bin:/Users/StephenChou/.sdkman/candidates/groovy/current/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Applications/Wireshark.app/Contents/MacOS:/Users/StephenChou/.sdkman/candidates/maven/3.5.2/bin
PWD=/private/tmp/TW-pipeline
RUN_CHANGES_DISPLAY_URL=http://localhost:8080/job/ThoughtWorks_Pipeline/217/display/redirect?page=changes
RUN_DISPLAY_URL=http://localhost:8080/job/ThoughtWorks_Pipeline/217/display/redirect
SDKMAN_CANDIDATES_DIR=/Users/StephenChou/.sdkman/candidates
SDKMAN_CURRENT_API=https://api.sdkman.io/2
SDKMAN_DIR=/Users/StephenChou/.sdkman
SDKMAN_LEGACY_API=https://api.sdkman.io/1
SDKMAN_PLATFORM=Darwin
SDKMAN_VERSION=5.5.13+272
SHELL=/bin/bash
SHLVL=3
SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.F1uajtB8U5/Listeners
STAGE_NAME=2018 in the result
TERM=ansi
TERM_PROGRAM=Apple_Terminal
TERM_PROGRAM_VERSION=404
TERM_SESSION_ID=CDE31E42-C7FF-457D-A1DB-CD2C2A96F672
TMPDIR=/var/folders/jp/s0fbpt254qs93ypz21xhvrsc0000gn/T/
USER=StephenChou
WORKSPACE=/tmp/TW-pipeline
XPC_FLAGS=0x0
XPC_SERVICE_NAME=0
_=/usr/bin/env
__CF_USER_TEXT_ENCODING=0x1F5:0x19:0x34

****************************

stage('try..catch') {
    steps {
        script {
            try {
                stage('Try...Catch..Start') {
                    sh 'exit 1'
                }
            }
            catch  (e) {
                stage('Try...Catch..Finish') {
                echo 'Try..Catch is working now'
                }
            }
        }
    }
}

****************************



