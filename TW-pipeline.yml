pipeline {
    agent {
        node {
            label "master"
            customWorkspace "/tmp/TW-pipeline"
        }
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
        disableConcurrentBuilds()
        timestamps()
    }
    triggers {
        cron('H */1 * * 1-5')
    }
    stages {
        stage('Workspace Cleanup') {
            steps {
                deleteDir()
            }
        }
        stage('Github Checkout') {
            steps {
                git branch: 'master',
                credentialsId: '3eaa752d-f3d7-495f-bb1e-72ca10dd4d31',
                url: 'https://github.com/zking2000/tw-code2.git'
            }
        }
        stage('Get Github Commit') {
            steps {
                script {
                    def result = sh (returnStdout: true, script: 'date').trim()
                        if ("${result}".contains("2018")) {
                            stage('2018 in the result') {
                                echo '2018 in the result'
                            }
                        }
                        else {
                            stage('2018 not in the result') {
                                echo '2018 is not in the result'
                            }
                        }
                }
            }
        }
        stage('Approve to the next level?') {
          steps {
               timeout(time: 5, unit: 'MINUTES') {
                  script {
                      myStage = input message: 'How long you want to wait', submitter: 'submitter', parameters: [choice(choices: '1Min\n2Mins\n3Mins', description: '', name: 'Minutes')]
                  }
              }
          }
        }
        stage('1Min') {
          when {
              expression {myStage == "1Min"}
          }
          steps {
              timeout(time: 1, unit: 'MINUTES') {
                  input message: 'This stage will delay for 1 minute', submitter: 'Admin'
              }
          }
        }
        stage('2Mins') {
          when {
              expression {myStage == "2Mins"}
          }
          steps {
              timeout(time: 2, unit: 'MINUTES') {
                  input message: 'This stage will delay for 2 minutes', submitter: 'Admin'
              }
          }
        }
        stage('3Mins') {
          when {
              expression {myStage == "3Mins"}
          }
          steps {
              timeout(time: 3, unit: 'MINUTES') {
                  input message: 'This stage will delay for 3 minutes', submitter: 'Admin'
              }
          }
        }
    }
}


